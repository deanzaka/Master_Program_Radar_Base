;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdlib.h>
;#asm
;PCODE: $0000000D VOL: 0
.equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0001 0006 #endasm
;#include <lcd.h>
;
;void lcd_set()
; 0001 000A {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0001 000B      lcd_init(16);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 000C }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;void lcd_text(char flash *str)
; 0001 000F {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 0010    char k;
; 0001 0011    while (k = *str++)
;PCODE: $00000019 VOL: 0
;	*str -> Y+1
;	k -> R17
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0012    lcd_putchar(k);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0001 0013 }
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;
;void lcd_number(int num)
; 0001 0016 {
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0001 0017      char lcd_buff[15];
; 0001 0018      itoa(num, lcd_buff);
;PCODE: $0000002E VOL: 0
;	num -> Y+15
;	lcd_buff -> Y+0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 0019      lcd_puts(lcd_buff);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 001A }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;
;void lcd_reset()
; 0001 001D {
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0001 001E      lcd_clear();
;PCODE: $0000003C VOL: 0
; 0001 001F }
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;
;void lcd_enter()
; 0001 0022 {
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0023      lcd_gotoxy(0,1);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 0024 }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;
;
;
;
